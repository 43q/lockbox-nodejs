// Generated by CoffeeScript 1.6.3
/*
This file is part of the Lockbox package.

Copyright Â© 2013 Erin Millard

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
*/


(function() {
  var EncryptionCipher;

  module.exports = EncryptionCipher = (function() {
    function EncryptionCipher(ursa, crypto) {
      if (ursa == null) {
        ursa = require('ursa');
      }
      if (crypto == null) {
        crypto = require('crypto');
      }
      this._ursa = ursa;
      this._crypto = crypto;
    }

    EncryptionCipher.prototype.encrypt = function(key, data) {
      var digest, encryptedData, encryptedKeyAndIv, generatedKey, hash, iv;
      key = this._ursa.coercePublicKey(key);
      generatedKey = this._crypto.randomBytes(32);
      iv = this._crypto.randomBytes(16);
      encryptedKeyAndIv = key.encrypt(data, 'binary', 'binary', this._ursa.RSA_PKCS1_PADDING);
      hash = this._crypto.createHash('sha1');
      hash.update(data);
      digest = hash.digest('binary');
      encryptedData = this._encryptAes(generatedKey, iv, digest + data);
      return this._base64UriEncode(encryptedKeyAndIv + encryptedData);
    };

    EncryptionCipher.prototype._encryptAes = function(key, iv, data) {
      var cipher;
      return cipher = this._crypto.createCipheriv('aes-256-cbc', key, iv);
    };

    return EncryptionCipher;

  })();

}).call(this);
